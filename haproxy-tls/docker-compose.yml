version: '3'

services:
  db:
    image: mariadb:${mysql_version}
    command: --transaction-isolation=read-committed --binlog-format=row
    restart: always
    volumes:
      - db:/var/lib/mysql
    environment:
      - mysql_root_password
      - mysql_user
      - mysql_password
      - mysql_database
    networks:
      - back

  app:
    image: nextcloud:${nextcloud_version}
    restart: always
    volumes:
      - nextcloud:/var/www/html
      - apps:/var/www/html/custom_apps
      - config:/var/www/html/config
      - data:/var/www/html/data
    environment:
      - mysql_database
      - mysql_host
      - mysql_user
      - mysql_password
      - redis_host
      - smtp_host
      - smtp_secure
      - smtp_port
      - smtp_authtype
      - SMTP_NAME
      - SMTP_PASSWORD
      - MAIL_FROM_ADDRESS
      - MAIL_DOMAIN
      - NEXTCLOUD_TRUSTED_DOMAINS
      - NEXTCLOUD_ADMIN_USER
      - NEXTCLOUD_ADMIN_PASSWORD
    depends_on:
      - db
      - redis
    networks:
      - back

  redis:
    image: redis:${REDIS_VERSION}
    restart: always
    networks:
      - back

  cron:
    image: nextcloud:${NEXTCLOUD_VERSION}
    restart: always
    volumes:
      - nextcloud:/var/www/html
    user: www-data
    entrypoint: /cron.sh
    depends_on:
      - db
      - redis
    networks:
      - back

  web:
    image: nginx:${NGINX_VERSION}
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - nextcloud:/var/www/html:ro
    environment:
      - VIRTUAL_HOST
    depends_on:
      - app
    networks:
      - back
      - lb_web

  discovery:
    image: jwilder/docker-gen
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./templates:/etc/docker-gen/templates
      - ./conf:/etc/haproxy
    command: "-watch /etc/docker-gen/templates/haproxy.cfg.tmpl /etc/haproxy/haproxy.cfg"

  haproxy:
    build:
      context: ./docker/haproxy
    volumes:
      - ./conf:/etc/haproxy
      - /dev/log:/dev/log
    ports:
      - 80:80
      - 443:443
    depends_on:
      - discovery
    networks:
      - lb_web

  letsencrypt-web:
    image: nginx:${NGINX_VERSION}
    volumes:
      - ./acme-challenge:/usr/share/nginx/html/.well-known/acme-challenge:ro
    networks:
      - lb_web

  letsencrypt:
    build:
      context: ./docker/letsencrypt
    volumes:
      - ./conf:/etc/haproxy
      - ./acme-challenge:/html-root/.well-known/acme-challenge/
      - ./certs:/var/certs
    depends_on:
      - haproxy

  ocsp:
    build:
      context: ./docker/ocsp
    volumes:
      - ./conf:/etc/haproxy

volumes:
  db:
  nextcloud:
  apps:
  config:
  data:

networks:
  back:
  lb_web:
    external: true
